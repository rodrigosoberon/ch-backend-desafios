DESAFIO MONGODB
-------------------------------------------------------------------

3) Listar todos los documentos en cada colección.
-> db.products.find()
-> db.messages.find()

4) Mostrar la cantidad de documentos almacenados en cada una de ellas.
-> db.products.countDocuments()
-> db.messages.countDocuments()

5) Realizar un CRUD sobre la colección de productos:
  a) Agregar un producto más en la colección de productos
  -> db.products.insert({title: "Lata de gaseosa", price: 123.90, url: "https://cdn3.iconfinder.com/data/icons/food-3-11/128/food_Soda-Pepsi-Cola-Coke-Beverage-512.png"})

  b) Realizar una consulta por nombre de producto específico:
    i) Listar los productos con precio menor a 1000 pesos.
      -> db.products.find({price: {$lt: 1000}})
    
    ii) Listar los productos con precio entre los 1000 a 3000 pesos.
      -> db.products.find({$and: [{price: {$gt: 1000}},{price: {$lt: 3000}}]})

    iii) Listar los productos con precio mayor a 3000 pesos.
      -> db.products.find({price: {$gt: 3000}})

    iv) Realizar una consulta que traiga sólo el nombre del tercer producto más barato.
      -> db.products.find().sort({price: 1}).skip(2).limit(1)

  c) Hacer una actualización sobre todos los productos, agregando el campo stock a todos ellos con un valor de 100.
    -> db.products.updateMany({},{$set: {"stock": 100}})

  d) Cambiar el stock a cero de los productos con precios mayores a 4000 pesos.
    -> db.products.updateMany({price: {$gt: 4000}},{$set: {stock: 0}})

  e) Borrar todos los productos con precio menor a 1000 pesos
    -> db.products.deleteMany({price: {$lt: 1000}})

6) Crear un usuario 'pepe' clave: 'asd456' que sólo pueda leer la base de datos ecommerce. Verificar que pepe no pueda cambiar la información.
  -> use admin
  -> db.createUser({user: "pepe", pwd: "asd456", roles: [{role: "read", db: "ecommerce"}]})